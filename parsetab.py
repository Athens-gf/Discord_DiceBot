
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftQUESTIONCOLONleftOPEQOPNEOPLTOPLEOPGTOPGEleftPLUSMINUSleftTIMESDIVIDErightUPLUSUMINUSleftDICESWJSWPCOCLHZMKleftCOMMAATDOLLAREXCLAMATIONUNDERLINEWAT BOOL CHOICEHEAD COC COLON COMMA DICE DIVIDE DOLLAR EXCLAMATION FATECHANGE IDENT LHZ LPAREN MINUS MINUSEQUAL MK MM NUMBER OPEQ OPGE OPGT OPLE OPLT OPNE PLUS PLUSEQUAL PP PRE QUESTION REGIST RPAREN STRING SWJ SWP TIMES TURN TURNALL UNDERLINE Wstatement : IDENT REGIST expressionstatement : IDENT PLUSEQUAL expression\n                 | IDENT MINUSEQUAL expression\n                 | IDENT PP\n                 | IDENT MMexpression : IDENTstatement : TURN IDENT REGIST expressionstatement : TURNstatement : TURNALLexpression : TURN IDENTexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression statement : expression DIVIDE '0'expression : expression OPEQ expression\n                  | expression OPNE expression\n                  | expression OPLT expression\n                  | expression OPLE expression\n                  | expression OPGT expression\n                  | expression OPGE expression expression : expression OPEQ list\n                  | expression OPNE list\n                  | expression OPLT list\n                  | expression OPLE list\n                  | expression OPGT list\n                  | expression OPGE list expression : PLUS expression %prec UPLUS\n                  | MINUS expression %prec UMINUS expression : LPAREN expression RPARENlist_element : expression COMMA expressionlist_element : list_element COMMA expressionlist_element : list_element COMMA list_elementlist : LPAREN list_element RPARENexpression : expression QUESTION expression COLON expressionexpression : STRINGexpression : NUMBERexpression : BOOLexpression : PREstatement : CHOICEHEAD listexpression : expression DICE expressionexpression : DICE expressionexpression : expression DICEexpression : DICEexpression : expression AT expression\n                  | expression DOLLAR expression\n                  | expression EXCLAMATION expression\n                  | expression UNDERLINE expression expression : expression DOLLAR PLUS expressionexpression : SWJexpression : SWJ DOLLAR expressionexpression : SWJ AT expressionexpression : SWP expression\n                  | SWP expression Wstatement : FATECHANGE\n                 | FATECHANGE expressionexpression : COC\n                  | COC expression\n                  | COC list\n                  | COC expression UNDERLINE listexpression : LHZexpression : MKstatement : expression"
    
_lr_action_items = {'IDENT':([0,4,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,47,52,53,57,82,85,88,94,96,100,101,103,],[2,42,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,89,46,46,46,46,46,46,46,46,46,46,46,]),'TURN':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[4,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'TURNALL':([0,],[5,]),'CHOICEHEAD':([0,],[6,]),'FATECHANGE':([0,],[7,]),'PLUS':([0,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,],[8,-6,27,8,8,8,8,-36,-37,-38,-39,-44,-50,8,-57,-61,-62,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-43,8,82,8,8,-10,8,27,-6,-28,-29,27,-42,8,8,-53,-58,-59,8,27,27,27,-14,-11,-12,-13,27,-22,27,-23,27,-24,27,-25,27,-26,27,-27,27,-41,-45,-46,8,-47,-48,8,27,8,-10,-30,-51,-52,-54,8,27,8,-28,27,-34,8,8,-60,8,27,27,27,27,]),'MINUS':([0,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,],[9,-6,28,9,9,9,9,-36,-37,-38,-39,-44,-50,9,-57,-61,-62,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-43,9,9,9,9,-10,9,28,-6,-28,-29,28,-42,9,9,-53,-58,-59,9,28,28,28,-14,-11,-12,-13,28,-22,28,-23,28,-24,28,-25,28,-26,28,-27,28,-41,-45,-46,9,-47,-48,9,28,9,-10,-30,-51,-52,-54,9,28,9,-28,28,-34,9,9,-60,9,28,28,28,28,]),'LPAREN':([0,6,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[10,44,10,10,10,10,10,10,57,10,10,10,10,10,10,10,57,57,57,57,57,57,10,10,10,10,10,10,10,10,10,10,10,10,10,103,10,10,10,10,]),'STRING':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NUMBER':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'BOOL':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PRE':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DICE':([0,2,3,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,],[15,-6,37,15,15,15,15,-36,-37,-38,-39,-44,-50,15,-57,-61,-62,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-43,15,15,15,15,-10,15,37,-6,37,37,37,-42,15,15,-53,-58,-59,15,37,37,37,37,37,37,37,37,-22,37,-23,37,-24,37,-25,37,-26,37,-27,37,-41,-45,-46,15,-47,-48,15,37,15,-10,-30,-51,-52,-54,15,37,15,37,37,-34,15,15,-60,15,37,37,37,37,]),'SWJ':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'SWP':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'COC':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LHZ':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'MK':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'$end':([1,2,3,4,5,7,11,12,13,14,15,16,18,19,20,24,25,37,42,43,45,46,48,49,51,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,89,90,91,92,93,97,98,99,102,104,],[0,-6,-63,-8,-9,-55,-36,-37,-38,-39,-44,-50,-57,-61,-62,-4,-5,-43,-10,-40,-56,-6,-28,-29,-42,-53,-58,-59,-1,-2,-3,-14,-15,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,-41,-45,-46,-47,-48,-10,-30,-51,-52,-54,-28,-7,-34,-60,-35,]),'REGIST':([2,42,],[21,85,]),'PLUSEQUAL':([2,],[22,]),'MINUSEQUAL':([2,],[23,]),'PP':([2,],[24,]),'MM':([2,],[25,]),'DIVIDE':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,26,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,88,-6,-28,-29,88,-42,-53,-58,-59,88,88,88,-14,88,88,-13,88,-22,88,-23,88,-24,88,-25,88,-26,88,-27,88,-41,-45,-46,-47,-48,88,-10,-30,-51,-52,-54,88,-28,88,-34,-60,88,88,88,88,]),'TIMES':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,29,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,29,-6,-28,-29,29,-42,-53,-58,-59,29,29,29,-14,29,29,-13,29,-22,29,-23,29,-24,29,-25,29,-26,29,-27,29,-41,-45,-46,-47,-48,29,-10,-30,-51,-52,-54,29,-28,29,-34,-60,29,29,29,29,]),'OPEQ':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,30,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,30,-6,-28,-29,30,-42,-53,-58,-59,30,30,30,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,30,-41,-45,-46,-47,-48,30,-10,-30,-51,-52,-54,30,-28,30,-34,-60,30,30,30,30,]),'OPNE':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,31,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,31,-6,-28,-29,31,-42,-53,-58,-59,31,31,31,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,31,-41,-45,-46,-47,-48,31,-10,-30,-51,-52,-54,31,-28,31,-34,-60,31,31,31,31,]),'OPLT':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,32,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,32,-6,-28,-29,32,-42,-53,-58,-59,32,32,32,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,32,-41,-45,-46,-47,-48,32,-10,-30,-51,-52,-54,32,-28,32,-34,-60,32,32,32,32,]),'OPLE':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,33,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,33,-6,-28,-29,33,-42,-53,-58,-59,33,33,33,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,33,-41,-45,-46,-47,-48,33,-10,-30,-51,-52,-54,33,-28,33,-34,-60,33,33,33,33,]),'OPGT':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,34,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,34,-6,-28,-29,34,-42,-53,-58,-59,34,34,34,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,34,-41,-45,-46,-47,-48,34,-10,-30,-51,-52,-54,34,-28,34,-34,-60,34,34,34,34,]),'OPGE':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,35,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,35,-6,-28,-29,35,-42,-53,-58,-59,35,35,35,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,35,-41,-45,-46,-47,-48,35,-10,-30,-51,-52,-54,35,-28,35,-34,-60,35,35,35,35,]),'QUESTION':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,36,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,36,-6,-28,-29,36,-42,-53,-58,-59,36,36,36,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,36,-41,-45,-46,-47,-48,36,-10,-30,-51,-52,-54,36,-28,36,-34,-60,-35,36,36,36,]),'AT':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,38,-36,-37,-38,-39,-44,53,-57,-61,-62,-43,-10,38,-6,38,38,38,38,38,38,-59,38,38,38,38,38,38,38,38,-22,38,-23,38,-24,38,-25,38,-26,38,-27,38,38,-45,-46,-47,-48,38,-10,-30,-51,-52,-54,38,38,38,-34,-60,38,38,38,38,]),'DOLLAR':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,39,-36,-37,-38,-39,-44,52,-57,-61,-62,-43,-10,39,-6,39,39,39,39,39,39,-59,39,39,39,39,39,39,39,39,-22,39,-23,39,-24,39,-25,39,-26,39,-27,39,39,-45,-46,-47,-48,39,-10,-30,-51,-52,-54,39,39,39,-34,-60,39,39,39,39,]),'EXCLAMATION':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,40,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,40,-6,40,40,40,40,40,40,-59,40,40,40,40,40,40,40,40,-22,40,-23,40,-24,40,-25,40,-26,40,-27,40,40,-45,-46,-47,-48,40,-10,-30,-51,-52,-54,40,40,40,-34,-60,40,40,40,40,]),'UNDERLINE':([2,3,11,12,13,14,15,16,18,19,20,37,42,45,46,48,49,50,51,54,55,56,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,87,89,90,91,92,93,95,97,98,99,102,104,106,107,108,],[-6,41,-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-10,41,-6,41,41,41,41,41,94,-59,41,41,41,41,41,41,41,41,-22,41,-23,41,-24,41,-25,41,-26,41,-27,41,41,-45,-46,-47,-48,41,-10,-30,-51,-52,-54,41,41,41,-34,-60,41,41,41,41,]),'RPAREN':([11,12,13,14,15,16,18,19,20,37,46,48,49,50,51,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,86,89,90,91,92,93,95,97,99,102,104,105,106,107,108,],[-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-6,-28,-29,90,-42,-53,-58,-59,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,-41,-45,-46,-47,-48,99,-10,-30,-51,-52,-54,90,-28,-34,-60,-35,-33,-32,-31,90,]),'W':([11,12,13,14,15,16,18,19,20,37,46,48,49,51,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,89,90,91,92,93,97,99,102,104,],[-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-6,-28,-29,-42,93,-58,-59,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,-41,-45,-46,-47,-48,-10,-30,-51,-52,-54,-28,-34,-60,-35,]),'COLON':([11,12,13,14,15,16,18,19,20,37,46,48,49,51,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,89,90,91,92,93,97,99,102,104,],[-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-6,-28,-29,-42,-53,-58,-59,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,96,-41,-45,-46,-47,-48,-10,-30,-51,-52,-54,-28,-34,-60,-35,]),'COMMA':([11,12,13,14,15,16,18,19,20,37,46,48,49,51,54,55,56,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79,80,81,83,84,86,87,89,90,91,92,93,95,97,99,102,104,105,106,107,108,],[-36,-37,-38,-39,-44,-50,-57,-61,-62,-43,-6,-28,-29,-42,-53,-58,-59,-14,-11,-12,-13,-16,-22,-17,-23,-18,-24,-19,-25,-20,-26,-21,-27,-41,-45,-46,-47,-48,100,101,-10,-30,-51,-52,-54,101,-28,-34,-60,-35,-33,-32,-31,101,]),'0':([26,],[62,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,7,8,9,10,15,17,18,21,22,23,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,52,53,57,82,85,88,94,96,100,101,103,],[3,45,48,49,50,51,54,55,58,59,60,61,63,64,65,66,68,70,72,74,76,78,79,80,81,83,84,87,91,92,95,97,98,61,84,104,106,107,108,]),'list':([6,18,30,31,32,33,34,35,94,],[43,56,67,69,71,73,75,77,102,]),'list_element':([44,57,100,103,],[86,86,105,86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> IDENT REGIST expression','statement',3,'p_statement_regist_value','parse.py',112),
  ('statement -> IDENT PLUSEQUAL expression','statement',3,'p_statement_change_value','parse.py',118),
  ('statement -> IDENT MINUSEQUAL expression','statement',3,'p_statement_change_value','parse.py',119),
  ('statement -> IDENT PP','statement',2,'p_statement_change_value','parse.py',120),
  ('statement -> IDENT MM','statement',2,'p_statement_change_value','parse.py',121),
  ('expression -> IDENT','expression',1,'p_expression_get_value','parse.py',148),
  ('statement -> TURN IDENT REGIST expression','statement',4,'p_statement_regist_turn','parse.py',154),
  ('statement -> TURN','statement',1,'p_statement_update_turn','parse.py',188),
  ('statement -> TURNALL','statement',1,'p_statement_update_turn_all','parse.py',193),
  ('expression -> TURN IDENT','expression',2,'p_expression_get_turn','parse.py',199),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parse.py',207),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parse.py',208),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parse.py',209),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parse.py',210),
  ('statement -> expression DIVIDE 0','statement',3,'p_expression_zero_division','parse.py',226),
  ('expression -> expression OPEQ expression','expression',3,'p_expression_comp','parse.py',232),
  ('expression -> expression OPNE expression','expression',3,'p_expression_comp','parse.py',233),
  ('expression -> expression OPLT expression','expression',3,'p_expression_comp','parse.py',234),
  ('expression -> expression OPLE expression','expression',3,'p_expression_comp','parse.py',235),
  ('expression -> expression OPGT expression','expression',3,'p_expression_comp','parse.py',236),
  ('expression -> expression OPGE expression','expression',3,'p_expression_comp','parse.py',237),
  ('expression -> expression OPEQ list','expression',3,'p_expression_comp_list','parse.py',253),
  ('expression -> expression OPNE list','expression',3,'p_expression_comp_list','parse.py',254),
  ('expression -> expression OPLT list','expression',3,'p_expression_comp_list','parse.py',255),
  ('expression -> expression OPLE list','expression',3,'p_expression_comp_list','parse.py',256),
  ('expression -> expression OPGT list','expression',3,'p_expression_comp_list','parse.py',257),
  ('expression -> expression OPGE list','expression',3,'p_expression_comp_list','parse.py',258),
  ('expression -> PLUS expression','expression',2,'p_expression_upm','parse.py',278),
  ('expression -> MINUS expression','expression',2,'p_expression_upm','parse.py',279),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parse.py',285),
  ('list_element -> expression COMMA expression','list_element',3,'p_list_element','parse.py',291),
  ('list_element -> list_element COMMA expression','list_element',3,'p_list_element_append','parse.py',296),
  ('list_element -> list_element COMMA list_element','list_element',3,'p_list_element_extend','parse.py',302),
  ('list -> LPAREN list_element RPAREN','list',3,'p_list','parse.py',308),
  ('expression -> expression QUESTION expression COLON expression','expression',5,'p_expression_conditional_op','parse.py',314),
  ('expression -> STRING','expression',1,'p_expression_string','parse.py',324),
  ('expression -> NUMBER','expression',1,'p_expression_number','parse.py',330),
  ('expression -> BOOL','expression',1,'p_expression_bool','parse.py',336),
  ('expression -> PRE','expression',1,'p_expression_pre','parse.py',342),
  ('statement -> CHOICEHEAD list','statement',2,'p_statement_choice','parse.py',352),
  ('expression -> expression DICE expression','expression',3,'p_expression_dice_nm','parse.py',361),
  ('expression -> DICE expression','expression',2,'p_expression_dice_m','parse.py',367),
  ('expression -> expression DICE','expression',2,'p_expression_dice_n','parse.py',373),
  ('expression -> DICE','expression',1,'p_expression_dice','parse.py',379),
  ('expression -> expression AT expression','expression',3,'p_expression_symbol','parse.py',394),
  ('expression -> expression DOLLAR expression','expression',3,'p_expression_symbol','parse.py',395),
  ('expression -> expression EXCLAMATION expression','expression',3,'p_expression_symbol','parse.py',396),
  ('expression -> expression UNDERLINE expression','expression',3,'p_expression_symbol','parse.py',397),
  ('expression -> expression DOLLAR PLUS expression','expression',4,'p_expression_dollar_plus','parse.py',402),
  ('expression -> SWJ','expression',1,'p_expression_sw_judge','parse.py',408),
  ('expression -> SWJ DOLLAR expression','expression',3,'p_expression_sw_judge_fix','parse.py',415),
  ('expression -> SWJ AT expression','expression',3,'p_expression_sw_judge_crit','parse.py',422),
  ('expression -> SWP expression','expression',2,'p_expression_sw_power','parse.py',429),
  ('expression -> SWP expression W','expression',3,'p_expression_sw_power','parse.py',430),
  ('statement -> FATECHANGE','statement',1,'p_statement_fate_change','parse.py',439),
  ('statement -> FATECHANGE expression','statement',2,'p_statement_fate_change','parse.py',440),
  ('expression -> COC','expression',1,'p_expression_coc','parse.py',452),
  ('expression -> COC expression','expression',2,'p_expression_coc','parse.py',453),
  ('expression -> COC list','expression',2,'p_expression_coc','parse.py',454),
  ('expression -> COC expression UNDERLINE list','expression',4,'p_expression_coc','parse.py',455),
  ('expression -> LHZ','expression',1,'p_expression_lhz','parse.py',475),
  ('expression -> MK','expression',1,'p_expression_mk','parse.py',481),
  ('statement -> expression','statement',1,'p_statement_expr','parse.py',487),
]
